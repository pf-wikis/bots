@*@import static io.github.pfwikis.bots.facts.model.SMWPropertyType.**@
@import static io.github.pfwikis.bots.facts.model.SFactTypes.*
@import static org.apache.commons.lang3.StringUtils.startsWith
@import io.github.pfwikis.bots.facts.model.SConcept

@args(String name, String pluralName, SConcept form, boolean isSubform)
<noinclude>
{{Bot created|Bot Facts Helper}}[[Category:Synced to starfinderwiki]]
This is the ''@name'' form. To create a page with this form, see [[:Category:Facts about @pluralName]]

</noinclude><includeonly>
{{{for template|Facts/@name@if(isSubform){|multiple|add button text=Add @form.getName().toLowerCase()}}}}
<div class="facts-form">
@for(prop:form.getProperties()) {
	<div class="facts-form-key @if(prop.getFactType().equals(BOOLEAN)){inline}">@prop.getName()</div>
	<div class="facts-form-value">
		<div class="facts-form-input">
			{{{field|@prop.getName()
				@(switch(prop.getFactType()) {
					default -> "graww";
				})
			
				@if(prop.getFactType() == IMAGE) {|input type=combobox|values from namespace=File}
				else if(prop.getFactType() == MULTILINE_WIKITEXT) {|input type=textarea|autogrow|editor=visualeditor}
				else if(prop.getFactType() == PAGE_LIST || prop.getFactType() == PAGE_LIST_ORDERED) {|list|input type=tokens|delimiter=;}
				else if(prop.getSmwType() == TEXT || prop.getSmwType() == PAGE) {|input type=@if(prop.isAutocompleteDisabled()){text}else{combobox}}
				else if(prop.getSmwType() == BOOLEAN) {|input type=checkbox}
				else if(prop.getSmwType() == NUMBER) {|input type=regexp|regexp=/^[0-9]*$/}
				@if(startsWith(prop.getSuggestValuesFrom(), "Category:")) {|values from category=@prop.getSuggestValuesFrom().substring(9)}
				else if(startsWith(prop.getSuggestValuesFrom(), "Namespace:")) {|values from namespace=@prop.getSuggestValuesFrom().substring(10)}
				else if(startsWith(prop.getSuggestValuesFrom(), "Property:")) {|values from property=@prop.getSuggestValuesFrom().substring(9)}
			}}}
		</div>
		@if(prop.getNote()!=null){
			<div class="facts-form-note">@prop.getNote()</div>
		}
	</div>
}
</div>
{{{end template}}}

'''Free text:'''

{{{standard input|free text|autogrow|editor=visualeditor}}}
</includeonly>