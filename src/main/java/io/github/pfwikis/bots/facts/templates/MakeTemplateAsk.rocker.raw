@import io.github.pfwikis.bots.facts.model.SConcept

@args(String name, SConcept c)

<includeonly>{{#ask: [[Fact type::Template:Facts/@name]]{{{query|}}}
	@for(prop:c.allProperties()) {
		|?@prop.getName()@?prop.wikitextToQuery()=@prop.getName()
	}
	@for(prop:c.getGeneratedProperties()) {
		|?@prop.getName()@?prop.wikitextToQuery()=@prop.getName()
	}
	|limit={{{limit|1000}}}
	|introtemplate={{{introtemplate|}}}
	|outrotemplate={{{outrotemplate|}}}
	|sort={{{sort|}}}
	|order=asc
	|userparam=Facts:{{{page|{{FULLPAGENAME}}}}}
	|link=none
	|format=plainlist
	|template={{{template|}}}
	|named args=yes
	|valuesep=;
	|searchlabel=
	|default={{{default|}}}
}}</includeonly><noinclude>
{{Bot created|Bot Facts Master}}
This template allows you to call another template with all the fact properties of a page.
It then provides all its properties as named parameters and the page it was called on as @*space*@
<code><nowiki>{{{#userparam}}}</nowiki></code>.

<templatedata>
{
	"params": {
		"template": {
			"description": "The template that should be called with the facts.",
			"type": "wiki-template-name",
			"suggested": true
		},
		"default": {
			"description": "what to show if there are no results matching the query",
			"type": "string"
		},
		"query": {
			"description": "The semantic wiki query to select pages with. Filtering for the right Fact type is already done.",
			"type": "string",
			"suggested": true
		},
		"introtemplate": {
			"description": "The template called before the first queried entity.",
			"type": "wiki-template-name"
		},
		"outrotemplate": {
			"description": "The template called after the first queried entity.",
			"type": "wiki-template-name"
		},
		"sort": {
			"description": "the property, or properties, to sort the results by",
			"type": "string"
		},
		"limit": {
			"description": "how many results to show at most",
			"type": "number",
			"default": "1000"
		}
	}
}
</templatedata>
[[Category:Synced to starfinderwiki]]
</noinclude>