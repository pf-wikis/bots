@import static io.github.pfwikis.bots.facts.SFactsProperties.*
@import static org.apache.commons.lang3.StringUtils.startsWith
@import java.util.Set
@import java.util.List
@import java.util.Map
@import io.github.pfwikis.bots.common.model.subject.SemanticSubject
@import io.github.pfwikis.bots.facts.model.SConcept
@import static java.util.Comparator.*
@import java.time.LocalDate
@import io.github.pfwikis.bots.utils.TemporalComparator
@import io.github.pfwikis.bots.facts.util.ConceptUtil
@import io.github.pfwikis.bots.facts.model.SInfoboxProperty
@import io.github.pfwikis.bots.facts.SFactsProperties
@import io.github.pfwikis.bots.facts.model.SProperty
@import io.github.pfwikis.bots.utils.StringHelper
@import io.github.pfwikis.bots.common.Wiki
@import io.github.pfwikis.bots.rest.endpoints.infobox.autocategorization.AutoCategorizer

@args(Wiki wiki, List<SConcept> concepts, SemanticSubject page, Map<String, String> series2Category)
@for(SConcept concept:concepts) {
	<div class="infobox @ConceptUtil.cssName(concept) @if(page.getOr(Sanctioned, false)){sanctioned}">
		<div class="name">
			@if(page.has(Full_title)) {
				@page.get(Full_title)
			}
			else {
				@page.getOr(Name, StringHelper.pageToTitle(page.getSubject().getTitle()))
			}
			@if(page.getOr(Sanctioned, false)){
				<div class="sanctioned-logo">
					[[File:
						@if(wiki==Wiki.PF){Pathfinder Society symbol.svg}
						else{Starfinder Society.webp}
						|link=@wiki.getName() Society @*important space*@
							@if(page.getOr(Rule_system, "").endsWith("F2")) {(second edition)}
							else{Roleplaying Guild}
						|20x20px
						|This product is sanctioned for Society play.
					]]
				</div>
			}
		</div>
		@if(page.has(Image)) {
			{{#ifexist:File:@page.get(Image).getTitle()|
				<div class="image">[[File:@page.get(Image).getTitle()|250px|Cover Image|class=not-lazy]]</div>
			}}
		}
		@if(page.has(Website)) {
			<div class="website">
				[@page.get(Website) @page.getOr(Pubcode, "Publisher's product page")]
			</div>
		}
		<div class="type">
			@concept.getName() @*<-important space*@
			@with(type = SFactsProperties.get(concept.getName()+" type")) {
				@if(page.has(type)) {
					- @((String)page.get(type))
				}
			}
		</div>
		<div class="table">
			@for(SInfoboxProperty<?> ibProp:concept.getInfoboxProperties()) {
				@if(ibProp.isPresentIn(page)) {
					<div class="key">
						@ibProp.toInfoboxLabel(page)
					</div>
					<div>
						@ibProp.toInfoboxDisplay(page)
					</div>
				}
			}
	
			@*releases*@
			@with?(SConcept releaseConcept = concept.getSubConcept("Release")) {
			@with(releases = page.getSubObjects("Facts/"+concept.getName()+"/Release")
				.stream()
				.sorted(
					comparing((SemanticSubject r)->r.getOr(Release_date, LocalDate.MAX), nullsLast(TemporalComparator.INSTANCE))
					.thenComparing(comparing(r->r.getOr(Release_type, "ZZZZZZZZZZ"), nullsLast(naturalOrder()))))
				.toList()) {
			@if(!releases.isEmpty()) {
				<div class="infobox-book-releases">
					<div class="infobox-book-releases-title">Releases</div>
					@for(release:releases) {
						<div class="name">
							@?release.getOr(Release_type, null)
							@if(release.has(Release_note)) {
								&nbsp;(@release.get(Release_note))
							}
						</div>
						<div class="table">
							@for(ibProp:releaseConcept.getInfoboxProperties()) {
								@if(
									!ibProp.getProperty().equals(Release_type)
									&& !ibProp.getProperty().equals(Release_note)
									&& ibProp.isPresentIn(release)
								) {
									<div class="key">@ibProp.toInfoboxLabel(release)</div>
									<div>@ibProp.toInfoboxDisplay(release)</div>
								}
							}
						</div>
					}
				</div>
			}}}
			@if(page.has(Gallery_page)) {
				<div class="full-width works-by">
					[[:@page.get(Gallery_page).toFullTitle()|Artwork from this book]]
				</div>
			}
		</div>
		<div class="infobox-links">
			<div class="infobox-link plainlinks fa">
				[[@page.getSubject().toFullTitle()|ÔÅÑ]]
			</div>
		</div>
	</div>

	@AutoCategorizer.categoriesWikitext(wiki, concept, page, series2Category)
}
